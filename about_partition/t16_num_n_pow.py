"""
剑指 Offer 16. 数值的整数次方
中等
428
相关企业
实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。



示例 1：

输入：x = 2.00000, n = 10
输出：1024.00000
示例 2：

输入：x = 2.10000, n = 3
输出：9.26100
示例 3：

输入：x = 2.00000, n = -2
输出：0.25000
解释：2-2 = 1/22 = 1/4 = 0.25


提示：

-100.0 < x < 100.0
-231 <= n <= 231-1
n 是一个整数
要么 x 不为零，要么 n > 0 。
-104 <= xn <= 104
"""

"""
思路：
不能用递归
快速幂方法
x^n = x^(n/2) + x^(n/2) = (x^2)^(n/2)           ===> 由此可以降低遍历次数
需要分奇偶：当n为奇数时，x^n = x(x^2)^(n//2)
"""

class Solution:
    def myPow(self, x: float, n: int) -> float:
        if n == 0:
            return 1
        if n == 1:
            return x
        if n == -1:
            return 1 / x
        res = 1
        while n:

            n = n // 2

